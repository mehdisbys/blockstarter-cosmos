// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: blockstartercosmos/contributors.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Contributors struct {
	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Projectid   uint64 `protobuf:"varint,2,opt,name=projectid,proto3" json:"projectid,omitempty"`
	Contributor string `protobuf:"bytes,3,opt,name=contributor,proto3" json:"contributor,omitempty"`
	Amount      string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Creator     string `protobuf:"bytes,5,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *Contributors) Reset()         { *m = Contributors{} }
func (m *Contributors) String() string { return proto.CompactTextString(m) }
func (*Contributors) ProtoMessage()    {}
func (*Contributors) Descriptor() ([]byte, []int) {
	return fileDescriptor_f64e864716da22a6, []int{0}
}
func (m *Contributors) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Contributors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Contributors.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Contributors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contributors.Merge(m, src)
}
func (m *Contributors) XXX_Size() int {
	return m.Size()
}
func (m *Contributors) XXX_DiscardUnknown() {
	xxx_messageInfo_Contributors.DiscardUnknown(m)
}

var xxx_messageInfo_Contributors proto.InternalMessageInfo

func (m *Contributors) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Contributors) GetProjectid() uint64 {
	if m != nil {
		return m.Projectid
	}
	return 0
}

func (m *Contributors) GetContributor() string {
	if m != nil {
		return m.Contributor
	}
	return ""
}

func (m *Contributors) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *Contributors) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*Contributors)(nil), "mehdisbys.blockstartercosmos.blockstartercosmos.Contributors")
}

func init() {
	proto.RegisterFile("blockstartercosmos/contributors.proto", fileDescriptor_f64e864716da22a6)
}

var fileDescriptor_f64e864716da22a6 = []byte{
	// 232 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4d, 0xca, 0xc9, 0x4f,
	0xce, 0x2e, 0x2e, 0x49, 0x2c, 0x2a, 0x49, 0x2d, 0x4a, 0xce, 0x2f, 0xce, 0xcd, 0x2f, 0xd6, 0x4f,
	0xce, 0xcf, 0x2b, 0x29, 0xca, 0x4c, 0x2a, 0x2d, 0xc9, 0x2f, 0x2a, 0xd6, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0xd2, 0xcf, 0x4d, 0xcd, 0x48, 0xc9, 0x2c, 0x4e, 0xaa, 0x2c, 0xd6, 0xc3, 0xd4, 0x80,
	0x45, 0x48, 0x69, 0x02, 0x23, 0x17, 0x8f, 0x33, 0x92, 0x39, 0x42, 0x7c, 0x5c, 0x4c, 0x99, 0x29,
	0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x2c, 0x41, 0x4c, 0x99, 0x29, 0x42, 0x32, 0x5c, 0x9c, 0x05, 0x45,
	0xf9, 0x59, 0xa9, 0xc9, 0x25, 0x99, 0x29, 0x12, 0x4c, 0x60, 0x61, 0x84, 0x80, 0x90, 0x02, 0x17,
	0x37, 0x92, 0x2b, 0x24, 0x98, 0x15, 0x18, 0x35, 0x38, 0x83, 0x90, 0x85, 0x84, 0xc4, 0xb8, 0xd8,
	0x12, 0x73, 0xf3, 0x4b, 0xf3, 0x4a, 0x24, 0x58, 0xc0, 0x92, 0x50, 0x9e, 0x90, 0x04, 0x17, 0x7b,
	0x72, 0x51, 0x6a, 0x22, 0x48, 0x17, 0x2b, 0x58, 0x02, 0xc6, 0x75, 0x8a, 0x3d, 0xf1, 0x48, 0x8e,
	0xf1, 0xc2, 0x23, 0x39, 0xc6, 0x07, 0x8f, 0xe4, 0x18, 0x27, 0x3c, 0x96, 0x63, 0xb8, 0xf0, 0x58,
	0x8e, 0xe1, 0xc6, 0x63, 0x39, 0x86, 0x28, 0xe7, 0xf4, 0xcc, 0x92, 0x8c, 0xd2, 0x24, 0xbd, 0xe4,
	0xfc, 0x5c, 0x84, 0x47, 0xf5, 0x91, 0x7d, 0xa5, 0x0b, 0x0d, 0x9a, 0x0a, 0x7d, 0x2c, 0xe1, 0x55,
	0x52, 0x59, 0x90, 0x5a, 0x9c, 0xc4, 0x06, 0x0e, 0x29, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xac, 0x64, 0x20, 0x3a, 0x52, 0x01, 0x00, 0x00,
}

func (m *Contributors) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Contributors) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Contributors) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintContributors(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Amount) > 0 {
		i -= len(m.Amount)
		copy(dAtA[i:], m.Amount)
		i = encodeVarintContributors(dAtA, i, uint64(len(m.Amount)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Contributor) > 0 {
		i -= len(m.Contributor)
		copy(dAtA[i:], m.Contributor)
		i = encodeVarintContributors(dAtA, i, uint64(len(m.Contributor)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Projectid != 0 {
		i = encodeVarintContributors(dAtA, i, uint64(m.Projectid))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintContributors(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintContributors(dAtA []byte, offset int, v uint64) int {
	offset -= sovContributors(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Contributors) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovContributors(uint64(m.Id))
	}
	if m.Projectid != 0 {
		n += 1 + sovContributors(uint64(m.Projectid))
	}
	l = len(m.Contributor)
	if l > 0 {
		n += 1 + l + sovContributors(uint64(l))
	}
	l = len(m.Amount)
	if l > 0 {
		n += 1 + l + sovContributors(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovContributors(uint64(l))
	}
	return n
}

func sovContributors(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozContributors(x uint64) (n int) {
	return sovContributors(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Contributors) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowContributors
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Contributors: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Contributors: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContributors
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Projectid", wireType)
			}
			m.Projectid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContributors
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Projectid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contributor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContributors
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthContributors
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthContributors
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Contributor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContributors
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthContributors
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthContributors
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContributors
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthContributors
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthContributors
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipContributors(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthContributors
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipContributors(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowContributors
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowContributors
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowContributors
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthContributors
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupContributors
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthContributors
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthContributors        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowContributors          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupContributors = fmt.Errorf("proto: unexpected end of group")
)
